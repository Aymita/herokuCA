{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./node_modules/@ionic/core/dist/esm/haptic-da73c8fd.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@ionic/core/dist/esm/theme-c2dc54d9.js","./src/app/services/api.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","file":"common-es2015.js","sourcesContent":["const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticImpact as a, hapticSelectionStart as b, hapticSelectionChanged as c, hapticSelectionEnd as d, hapticSelection as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { Injectable } from '@angular/core';\t\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n  getEpisodes(){\n      \n      return this.http.get(`https://8100-f511f217-93d7-4d93-9e1c-dd849185b379.ws-eu01.gitpod.io/assets/episodes.json`);\n  }\n\n  getEpisode(id) {   \n    return this.http.get(`https://www.breakingbadapi.com/api/episodes/${id}`);\n  }\n\n  getEpisodesBySeries(serie){\n    return this.http.get(`https://www.breakingbadapi.com/api/episodes?series=${serie}`);\n  }\n \n  searchData(find: string, type: string): Observable<any>{\n   \n    switch(type) { \n    case \"series\": { \n        return this.getEpisodesBySeries(find); \n      break; \n    } \n    case \"episode_id\": { \n       return this.getEpisode(find);  \n      break; \n    } \n\n    default: { \n      return this.getEpisodes();  \n      break; \n    } \n    }  \n }\n\n getCharacters(){\n      return this.http.get(`https://8100-f511f217-93d7-4d93-9e1c-dd849185b379.ws-eu01.gitpod.io/assets/characters.json`);\n  }\n\n  getCharacter(id) {   \n    return this.http.get(`https://www.breakingbadapi.com/api/characters/${id}`);\n  }\n\n  getCharactersByCategories(category){\n    return this.http.get(`https://www.breakingbadapi.com/api/characters?category=${category}`);\n  }\n\n  getCharactersByRandom(){\n    return this.http.get(`https://breakingbadapi.com/api/characters/random`);\n  }\n\n  getCharactersByName(name){\n    return this.http.get(`https://www.breakingbadapi.com/api/characters/?name=${name}`);\n  }\n \n  searchDataCharacter(find: string, type: string): Observable<any>{\n\n    switch(type) { \n    case \"category\": { \n        return this.getCharactersByCategories(find); \n      break; \n    } \n    case \"name\": { \n       return this.getCharactersByName(find);  \n      break; \n    }\n    case \"random\": { \n       return this.getCharactersByRandom();  \n      break; \n    } \n    case \"char_id\": { \n       return this.getCharacter(find);  \n      break; \n    } \n\n    default: { \n      return this.getCharacters();  \n      break; \n    } \n    } \n \n }\n\n getQuotes(){\n      return this.http.get(`https://8100-f511f217-93d7-4d93-9e1c-dd849185b379.ws-eu01.gitpod.io/assets/quotes.json`);\n  }\n\n  getQuote(id) {   \n    return this.http.get(`https://www.breakingbadapi.com/api/quotes/${id}`);\n  }\n\n  getQuotesByAuthor(author){\n    return this.http.get(`https://www.breakingbadapi.com/api/quote?author=${author}`);\n  }\n\n  getQuotesByRandom(){\n    return this.http.get(`https://breakingbadapi.com/api/quote/random`);\n  }\n\n  getQuotesByRandomAuthor(author){\n    return this.http.get(`https://www.breakingbadapi.com/api//quote/random?author=${author}`);\n  }\n \n  searchDataQuote(find: string, type: string): Observable<any>{\n   \n    switch(type) { \n    case \"author\": { \n        return this.getQuotesByAuthor(find); \n      break; \n    } \n    case \"random_author\": { \n       return this.getQuotesByRandomAuthor(find);  \n      break; \n    }\n    case \"random\": { \n       return this.getQuotesByRandom();  \n      break; \n    } \n    case \"quote_id\": { \n       return this.getQuote(find);  \n      break; \n    } \n\n    default: { \n      return this.getQuotes();  \n      break; \n    } \n    }  \n }\n \n getDeaths(){     \n    return this.http.get(`https://8100-f511f217-93d7-4d93-9e1c-dd849185b379.ws-eu01.gitpod.io/assets/deaths.json`);\n  }\n \n  getDeathsByName(name){\n    return this.http.get(`https://www.breakingbadapi.com/api/death-count?name=${name}`);\n  }\n\n  getDeathsByRandom(){\n    return this.http.get(`https://breakingbadapi.com/api/random-death`);\n  }\n\n  getDeathsByCount(){\n    return this.http.get(`https://breakingbadapi.com/api/death-count`);\n  }\n\n  getDeathPages(limit,offset){\n      return this.http.get(`https://www.breakingbadapi.com/api/deaths?limit=${limit}&offset=${offset}`);\n  }\n\n  searchDataDeath(find: string, type: string): Observable<any>{\n   \n    switch(type) { \n    case \"name\": { \n        return this.getDeathsByName(find); \n      break; \n    }    \n    case \"random\": { \n       return this.getDeathsByRandom();  \n      break; \n    } \n    case \"deathCount\": { \n       return this.getDeathsByCount();  \n      break; \n    } \n\n    default: { \n      return this.getDeaths();  \n      break; \n    } \n    }  \n }\n}\n"],"sourceRoot":"webpack:///"}