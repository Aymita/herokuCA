{"version":3,"sources":["webpack:///src/app/pages/quotes/quotes.page.html","webpack:///src/app/pages/quotes/quotes-routing.module.ts","webpack:///src/app/pages/quotes/quotes.module.ts","webpack:///src/app/pages/quotes/quotes.page.scss","webpack:///src/app/pages/quotes/quotes.page.ts"],"names":["routes","path","component","QuotesPageRoutingModule","imports","forChild","exports","QuotesPageModule","declarations","SearchType","QuotesPage","router","api","searchTerm","type","all","quotes","getQuotes","subscribe","data","console","log","quote","quoteId","quote_id","navigateByUrl","searchDataQuote","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,uBAAuB;AAAA;AAAA,KAApC;;AAAaA,2BAAuB,6DAJnC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAImC,GAAvBH,uBAAuB,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,QAAaI,gBAAgB;AAAA;AAAA,KAA7B;;AAAaA,oBAAgB,6DAT5B,+DAAS;AACRH,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,8EAJO,CADD;AAORI,kBAAY,EAAE,CAAC,uDAAD;AAPN,KAAT,CAS4B,GAAhBD,gBAAgB,CAAhB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMf,QAAYE,UAAZ;;AAAA,eAAYA,UAAZ,EAAsB;AAClB;AACA;AACA;AACA;AACA;AACH,KAND,EAAYA,UAAU,KAAVA,UAAU,MAAtB;;AAcA,QAAaC,UAAU;AAMrB,0BAAoBC,MAApB,EAA4CC,GAA5C,EAA6D;AAAA;;AAAzC,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAC,GAAA,GAAAA,GAAA;AAH5C,aAAAC,UAAA,GAAW,EAAX;AACA,aAAAC,IAAA,GAAoBL,UAAU,CAACM,GAA/B;AAEgE;;AAN3C;AAAA;AAAA,mCAQV;AACR,eAAKC,MAAL,GAAc,KAAKJ,GAAL,CAASK,SAAT,EAAd;AACA,eAAKD,MAAL,CAAYE,SAAZ,CAAsB,UAAAC,IAAI,EAAE;AACxBC,mBAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBF,IAAxB;AACH,WAFD;AAGF;AAboB;AAAA;AAAA,oCAeVG,KAfU,EAeH;AACd,cAAIC,OAAO,GAAGD,KAAK,CAACE,QAApB;AACA,eAAKb,MAAL,CAAYc,aAAZ,wBAA0CF,OAA1C;AACH;AAlBoB;AAAA;AAAA,wCAoBT;AACR,eAAKP,MAAL,GAAc,KAAKJ,GAAL,CAASc,eAAT,CAAyB,KAAKb,UAA9B,EAA0C,KAAKC,IAA/C,CAAd;AACA,eAAKE,MAAL,CAAYE,SAAZ,CAAsB,UAAAC,IAAI,EAAE;AACzBC,mBAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBF,IAAxB;AACH,WAFA;AAIH;AA1BoB;;AAAA;AAAA,OAAvB;;;;cAM8B;;cAAqB;;;;AANtCT,cAAU,6DANtB,gEAAU;AACTiB,cAAQ,EAAE,YADD;AAETC,cAAQ,EAAR;AAAA;AAAA,kGAFS;;;;AAAA,KAAV,CAMsB,GAAVlB,UAAU,CAAV","file":"quotes-quotes-module-es5.js","sourcesContent":["export default \"<ion-header>\\n   <ion-toolbar color=\\\"primary\\\"> \\n    <ion-avatar>\\n      <img src=\\\"./assets/icon/character.ico\\\" />\\n    </ion-avatar>\\n    <ion-title>Quotes</ion-title>   \\n </ion-toolbar>\\n</ion-header>\\n<ion-content padding class=\\\"background\\\">\\n    <ion-searchbar class=\\\"font_red\\\" [(ngModel)]=\\\"searchTerm\\\" (ionChange)=\\\"searchChanges($event)\\\"></ion-searchbar>\\n        <ion-item>\\n            <ion-label class=\\\"font_red\\\">Select  type</ion-label>\\n            <ion-select class=\\\"font_red\\\" [(ngModel)]=\\\"type\\\" (ionChange)=\\\"searchChanges($event)\\\">\\n                <ion-select-option value=\\\"\\\">All</ion-select-option>\\n                <ion-select-option value=\\\"quote_id\\\">ID</ion-select-option>\\n                <ion-select-option value=\\\"author\\\">Author</ion-select-option>\\n                <ion-select-option value=\\\"random\\\">Random</ion-select-option>\\n                <ion-select-option value=\\\"random_author\\\">Random Author</ion-select-option>     \\n            </ion-select>\\n        </ion-item>\\n    <ion-list>    \\n        <ion-item button detail lines=\\\"inset\\\" *ngFor=\\\"let quote of quotes | async\\\" (click)=\\\"openDetails(quote)\\\">\\n            <ion-avatar slot=\\\"start\\\">\\n                <img src=\\\"./assets/icon/episode.ico\\\" alt=\\\"ion\\\">\\n            </ion-avatar>\\n            <ion-label>\\n                <h3>{{quote?.quote_id}} Quote</h3>\\n                <p>{{quote?.series}}</p>\\n            </ion-label>             \\n        </ion-item>    \\n  </ion-list>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { QuotesPage } from './quotes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuotesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class QuotesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { QuotesPageRoutingModule } from './quotes-routing.module';\n\nimport { QuotesPage } from './quotes.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    QuotesPageRoutingModule\n  ],\n  declarations: [QuotesPage]\n})\nexport class QuotesPageModule {}\n","export default \"ion-content.background {\\n  --ion-background-color: #EAFAFA;\\n}\\n\\n.font_blue {\\n  color: #1c0e9e;\\n  font-size: 0.8rem;\\n}\\n\\n.font_red {\\n  color: #e9251f;\\n  font-size: 0.8rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi93b3Jrc3BhY2UvaGVyb2t1Q0Evc3JjL2FwcC9wYWdlcy9xdW90ZXMvcXVvdGVzLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvcXVvdGVzL3F1b3Rlcy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSwrQkFBQTtBQ0NKOztBRENBO0VBQ0ksY0FBQTtFQUNBLGlCQUFBO0FDRUo7O0FEQUE7RUFDSSxjQUFBO0VBQ0EsaUJBQUE7QUNHSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3F1b3Rlcy9xdW90ZXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQuYmFja2dyb3VuZHtcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiAjRUFGQUZBOyBcbn1cbi5mb250X2JsdWV7XG4gICAgY29sb3I6IHJnYigyOCwgMTQsIDE1OCk7IFxuICAgIGZvbnQtc2l6ZTogMC44cmVtO1xufVxuLmZvbnRfcmVke1xuICAgIGNvbG9yOiByZ2IoMjMzLCAzNywgMzEpOyBcbiAgICBmb250LXNpemU6IDAuOHJlbTtcbn0iLCJpb24tY29udGVudC5iYWNrZ3JvdW5kIHtcbiAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogI0VBRkFGQTtcbn1cblxuLmZvbnRfYmx1ZSB7XG4gIGNvbG9yOiAjMWMwZTllO1xuICBmb250LXNpemU6IDAuOHJlbTtcbn1cblxuLmZvbnRfcmVkIHtcbiAgY29sb3I6ICNlOTI1MWY7XG4gIGZvbnQtc2l6ZTogMC44cmVtO1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\nimport { ApiService} from '../../services/api.service';\n\nexport enum SearchType{\n    all='',\n    quote_id = 'quote_id',   \n    author = 'author',\n    random = 'random',\n    random_author = 'random_author'\n}\n\n@Component({\n  selector: 'app-quotes',\n  templateUrl: './quotes.page.html',\n  styleUrls: ['./quotes.page.scss'],\n})\n\nexport class QuotesPage implements OnInit {\n\n  quotes: Observable<any>;\n  searchTerm='';\n  type : SearchType = SearchType.all;\n\n  constructor(private router: Router, private api: ApiService) { }\n\n  ngOnInit() {\n     this.quotes = this.api.getQuotes();\n     this.quotes.subscribe(data=>{\n         console.log('My data: ',data)\n     })\n  }\n\n openDetails(quote) {\n      let quoteId = quote.quote_id;  \n      this.router.navigateByUrl(`/tabs/quotes/${quoteId}`);\n  }\n\n searchChanges(){\n      this.quotes = this.api.searchDataQuote(this.searchTerm, this.type);\n      this.quotes.subscribe(data=>{\n         console.log('My data: ',data)\n     })\n\n  } \n\n}\n"]}